{"version":3,"file":"static/js/387.67dbb5a6.chunk.js","mappings":"qPAEaA,EAAgBC,EAAAA,GAAAA,GAAH,4EAMbC,EAAWD,EAAAA,GAAAA,GAAH,kHAMRE,EAAWF,EAAAA,GAAAA,EAAH,+DAKRG,EAAYH,EAAAA,GAAAA,IAAH,wC,4CC4CtB,EAzDa,WAAO,IAAD,EACTI,GAAcC,EAAAA,EAAAA,MAAdD,UAER,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAYC,EAAAA,EAAAA,cAAW,iBAC3B,0FAAYJ,EAAZ,UAA0BK,EAAAA,EAAAA,IAAQT,GAAlC,uGACA,CAACA,IAUH,OAPAU,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GACbC,IAEAD,GAAa,EACd,GAAE,CAACC,KAGF,gCACGF,IACC,SAAC,KAAD,CACEM,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,oBACVC,OAAO,IACPC,aAAc,CACZC,WAAY,OACZC,QAAS,OACTC,eAAgB,UAElBC,aAAa,UACbC,SAAS,KAIXhB,IACA,SAACV,EAAD,iBACGQ,QADH,IACGA,GADH,UACGA,EAAMA,YADT,aACG,EAAYmB,KAAI,SAAAC,GACf,IAAMC,EACqB,OAAzBD,EAAQE,aAAR,kGAEuCF,EAAQE,cACjD,OACE,UAAC5B,EAAD,YACE,SAACE,EAAD,CAAW2B,IAAKF,KAChB,SAAC1B,EAAD,UAAWyB,EAAQI,SAFNJ,EAAQK,GAK1B,QAKV,C,qLC3DKC,EAAkB,sCAGlBC,EAAS,IAAIC,gBAAgB,CACjCC,QANc,qCASHC,EAAgB,mCAAG,+GAELC,MAAM,GAAD,OAVP,kDAUO,OAAuBJ,IAFvB,WAEtBK,EAFsB,QAGdC,GAHc,sBAGJ,IAAIC,MAAMF,EAASG,OAHf,uBAKAH,EAASI,OALT,cAKtBC,EALsB,yBAMrBA,GANqB,kCAQ5BC,QAAQC,IAAR,MAR4B,0DAAH,qDAYhBC,EAAU,mCAAG,WAAMC,GAAN,kGAECV,MAAM,GAAD,OAAIL,GAAJ,OAAsBe,EAAtB,YAAiCd,IAFvC,WAEhBK,EAFgB,QAGRC,GAHQ,sBAGE,IAAIC,MAAMF,EAASG,OAHrB,uBAKIH,EAASI,OALb,cAKhBM,EALgB,yBAMfA,GANe,kCAQtBJ,QAAQC,IAAR,MARsB,0DAAH,sDAYVjC,EAAO,mCAAG,WAAMmC,GAAN,kGAEIV,MAAM,GAAD,OACvBL,GADuB,OACLe,EADK,oBACcd,IAHvB,WAEbK,EAFa,QAKLC,GALK,sBAKK,IAAIC,MAAMF,EAASG,OALxB,uBAMKH,EAASI,OANd,cAMbhC,EANa,yBAOZA,GAPY,kCASnBkC,QAAQC,IAAR,MATmB,0DAAH,sDAaPI,EAAU,mCAAG,WAAMF,GAAN,kGAECV,MAAM,GAAD,OACvBL,GADuB,OACLe,EADK,oBACcd,IAHpB,WAEhBK,EAFgB,QAKRC,GALQ,sBAKE,IAAIC,MAAMF,EAASG,OALrB,uBAMIH,EAASI,OANb,cAMhBQ,EANgB,yBAOfA,GAPe,kCAStBN,QAAQC,IAAR,MATsB,0DAAH,sDAaVM,EAAS,mCAAG,WAAMC,GAAN,kGAEEf,MAAM,GAAD,OA1DT,8CA0DS,OAAqBJ,EAArB,kBAAqCmB,IAF5C,WAEfd,EAFe,QAGPC,GAHO,sBAGG,IAAIC,MAAMF,EAASG,OAHtB,uBAIKH,EAASI,OAJd,cAIfW,EAJe,yBAKdA,GALc,kCAOrBT,QAAQC,IAAR,MAPqB,0DAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const CastItem = styled.li`\n  border: 1px solid black;\n  border-radius: 5px;\n  flex-basis: calc((100%-90px) / 10);\n`;\n\nexport const CastText = styled.p`\n  padding: 5px 0;\n  font-size: 14px;\n`;\n\nexport const CastImage = styled.img`\n  width: 100%;\n`;\n","import { CastContainer, CastItem, CastText, CastImage } from \"./Cast.styled\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from \"services/api\";\n\nconst Cast = () => {\n  const { elementId } = useParams();\n\n  const [cast, setCast] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const movieCast = useCallback(\n    async () => setCast(await getCast(elementId)),\n    [elementId]\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    movieCast();\n\n    setIsLoading(false);\n  }, [movieCast]);\n\n  return (\n    <>\n      {isLoading && (\n        <TailSpin\n          height=\"160\"\n          width=\"160\"\n          color=\"#2196f3\"\n          ariaLabel=\"tail-spin-loading\"\n          radius=\"1\"\n          wrapperStyle={{\n            paddingTop: \"35vh\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n          wrapperClass=\"Spinner\"\n          visible={true}\n        />\n      )}\n\n      {!isLoading && (\n        <CastContainer>\n          {cast?.cast?.map(element => {\n            const isPosterAvaible =\n              element.profile_path === null\n                ? `https://static.thenounproject.com/png/3674270-200.png`\n                : `https://image.tmdb.org/t/p/w500/${element.profile_path}`;\n            return (\n              <CastItem key={element.id}>\n                <CastImage src={isPosterAvaible} />\n                <CastText>{element.name}</CastText>\n              </CastItem>\n            );\n          })}\n        </CastContainer>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const API_KEY = \"6013882f278a288901195e6aa884c4e8\";\nconst API_URL_TRENDING = \"https://api.themoviedb.org/3/trending/all/day?\";\nconst API_URL_DETAILS = \"https://api.themoviedb.org/3/movie/\";\nconst API_URL_SEARCH = \"https://api.themoviedb.org/3/search/movie?\";\n\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const getTrendingToday = async () => {\n  try {\n    const response = await fetch(`${API_URL_TRENDING}${params}`);\n    if (!response.ok) throw new Error(response.statu);\n\n    const trendingMovie = await response.json();\n    return trendingMovie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetails = async movieID => {\n  try {\n    const response = await fetch(`${API_URL_DETAILS}${movieID}?${params}`);\n    if (!response.ok) throw new Error(response.statu);\n\n    const movieDetail = await response.json();\n    return movieDetail;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieID => {\n  try {\n    const response = await fetch(\n      `${API_URL_DETAILS}${movieID}/credits?${params}`\n    );\n    if (!response.ok) throw new Error(response.statu);\n    const movieCast = await response.json();\n    return movieCast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieID => {\n  try {\n    const response = await fetch(\n      `${API_URL_DETAILS}${movieID}/reviews?${params}`\n    );\n    if (!response.ok) throw new Error(response.statu);\n    const movieReview = await response.json();\n    return movieReview;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearch = async search => {\n  try {\n    const response = await fetch(`${API_URL_SEARCH}${params}&query=${search}`);\n    if (!response.ok) throw new Error(response.statu);\n    const movieSearch = await response.json();\n    return movieSearch;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["CastContainer","styled","CastItem","CastText","CastImage","elementId","useParams","useState","cast","setCast","isLoading","setIsLoading","movieCast","useCallback","getCast","useEffect","height","width","color","ariaLabel","radius","wrapperStyle","paddingTop","display","justifyContent","wrapperClass","visible","map","element","isPosterAvaible","profile_path","src","name","id","API_URL_DETAILS","params","URLSearchParams","api_key","getTrendingToday","fetch","response","ok","Error","statu","json","trendingMovie","console","log","getDetails","movieID","movieDetail","getReviews","movieReview","getSearch","search","movieSearch"],"sourceRoot":""}